// Generated from src/lang/Sml.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class SmlLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly WHITESPACE = 5;
	public static readonly INT = 6;
	public static readonly FLOAT = 7;
	public static readonly CHAR = 8;
	public static readonly STRING = 9;
	public static readonly LPAREN = 10;
	public static readonly RPAREN = 11;
	public static readonly REC = 12;
	public static readonly AND = 13;
	public static readonly SEMICOLON = 14;
	public static readonly SLASH = 15;
	public static readonly DIV = 16;
	public static readonly MOD = 17;
	public static readonly STAR = 18;
	public static readonly PLUS = 19;
	public static readonly MINUS = 20;
	public static readonly CARET = 21;
	public static readonly CONS = 22;
	public static readonly AT = 23;
	public static readonly EQ = 24;
	public static readonly NEQ = 25;
	public static readonly LT = 26;
	public static readonly GT = 27;
	public static readonly LTE = 28;
	public static readonly GTE = 29;
	public static readonly ID = 30;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "WHITESPACE", "INT", "FLOAT", "CHAR", 
		"STRING", "DIGIT", "NUM", "LETTER", "ESC", "SAFECODEPOINT", "ASCII", "LPAREN", 
		"RPAREN", "REC", "AND", "SEMICOLON", "SLASH", "DIV", "MOD", "STAR", "PLUS", 
		"MINUS", "CARET", "CONS", "AT", "EQ", "NEQ", "LT", "GT", "LTE", "GTE", 
		"ID",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'let'", "'in'", "'end'", "'val'", undefined, undefined, undefined, 
		undefined, undefined, "'('", "')'", "'rec'", "'and'", "';'", "'/'", "'div'", 
		"'mod'", "'*'", "'+'", "'-'", "'^'", "'::'", "'@'", "'='", "'<>'", "'<'", 
		"'>'", "'<='", "'>='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, "WHITESPACE", "INT", 
		"FLOAT", "CHAR", "STRING", "LPAREN", "RPAREN", "REC", "AND", "SEMICOLON", 
		"SLASH", "DIV", "MOD", "STAR", "PLUS", "MINUS", "CARET", "CONS", "AT", 
		"EQ", "NEQ", "LT", "GT", "LTE", "GTE", "ID",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SmlLexer._LITERAL_NAMES, SmlLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return SmlLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(SmlLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Sml.g4"; }

	// @Override
	public get ruleNames(): string[] { return SmlLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return SmlLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return SmlLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return SmlLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02 \xD2\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
		"#\t#\x04$\t$\x04%\t%\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x06\x06\x06\\\n\x06\r\x06\x0E\x06]\x03\x06\x03\x06\x03\x07\x05\x07c\n" +
		"\x07\x03\x07\x03\x07\x03\b\x05\bh\n\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x07\nv\n\n\f\n\x0E\ny\v\n\x03\n" +
		"\x03\n\x03\v\x03\v\x03\f\x06\f\x80\n\f\r\f\x0E\f\x81\x03\r\x03\r\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x05\x10\x8D\n\x10\x03" +
		"\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03" +
		"\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03" +
		"\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03" +
		"\x1E\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03" +
		"#\x03$\x03$\x03$\x03%\x03%\x03%\x03%\x07%\xC7\n%\f%\x0E%\xCA\v%\x03%\x06" +
		"%\xCD\n%\r%\x0E%\xCE\x05%\xD1\n%\x02\x02\x02&\x03\x02\x03\x05\x02\x04" +
		"\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v" +
		"\x15\x02\x02\x17\x02\x02\x19\x02\x02\x1B\x02\x02\x1D\x02\x02\x1F\x02\x02" +
		"!\x02\f#\x02\r%\x02\x0E\'\x02\x0F)\x02\x10+\x02\x11-\x02\x12/\x02\x13" +
		"1\x02\x143\x02\x155\x02\x167\x02\x179\x02\x18;\x02\x19=\x02\x1A?\x02\x1B" +
		"A\x02\x1CC\x02\x1DE\x02\x1EG\x02\x1FI\x02 \x03\x02\t\x05\x02\v\f\x0F\x0F" +
		"\"\"\x03\x022;\x04\x02C\\c|\n\x02$$11^^ddhhppttvv\x05\x02\x02!$$^^\x04" +
		"\x02))aa\x0E\x02##%(,-//11<<>B^^``bb~~\x80\x80\x02\xD6\x02\x03\x03\x02" +
		"\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02" +
		"\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02" +
		"\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02!\x03\x02\x02" +
		"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02" +
		")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
		"\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02" +
		"\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x03" +
		"K\x03\x02\x02\x02\x05O\x03\x02\x02\x02\x07R\x03\x02\x02\x02\tV\x03\x02" +
		"\x02\x02\v[\x03\x02\x02\x02\rb\x03\x02\x02\x02\x0Fg\x03\x02\x02\x02\x11" +
		"m\x03\x02\x02\x02\x13s\x03\x02\x02\x02\x15|\x03\x02\x02\x02\x17\x7F\x03" +
		"\x02\x02\x02\x19\x83\x03\x02\x02\x02\x1B\x85\x03\x02\x02\x02\x1D\x88\x03" +
		"\x02\x02\x02\x1F\x8C\x03\x02\x02\x02!\x8E\x03\x02\x02\x02#\x90\x03\x02" +
		"\x02\x02%\x92\x03\x02\x02\x02\'\x96\x03\x02\x02\x02)\x9A\x03\x02\x02\x02" +
		"+\x9C\x03\x02\x02\x02-\x9E\x03\x02\x02\x02/\xA2\x03\x02\x02\x021\xA6\x03" +
		"\x02\x02\x023\xA8\x03\x02\x02\x025\xAA\x03\x02\x02\x027\xAC\x03\x02\x02" +
		"\x029\xAE\x03\x02\x02\x02;\xB1\x03\x02\x02\x02=\xB3\x03\x02\x02\x02?\xB5" +
		"\x03\x02\x02\x02A\xB8\x03\x02\x02\x02C\xBA\x03\x02\x02\x02E\xBC\x03\x02" +
		"\x02\x02G\xBF\x03\x02\x02\x02I\xD0\x03\x02\x02\x02KL\x07n\x02\x02LM\x07" +
		"g\x02\x02MN\x07v\x02\x02N\x04\x03\x02\x02\x02OP\x07k\x02\x02PQ\x07p\x02" +
		"\x02Q\x06\x03\x02\x02\x02RS\x07g\x02\x02ST\x07p\x02\x02TU\x07f\x02\x02" +
		"U\b\x03\x02\x02\x02VW\x07x\x02\x02WX\x07c\x02\x02XY\x07n\x02\x02Y\n\x03" +
		"\x02\x02\x02Z\\\t\x02\x02\x02[Z\x03\x02\x02\x02\\]\x03\x02\x02\x02][\x03" +
		"\x02\x02\x02]^\x03\x02\x02\x02^_\x03\x02\x02\x02_`\b\x06\x02\x02`\f\x03" +
		"\x02\x02\x02ac\x07\x80\x02\x02ba\x03\x02\x02\x02bc\x03\x02\x02\x02cd\x03" +
		"\x02\x02\x02de\x05\x17\f\x02e\x0E\x03\x02\x02\x02fh\x07\x80\x02\x02gf" +
		"\x03\x02\x02\x02gh\x03\x02\x02\x02hi\x03\x02\x02\x02ij\x05\x17\f\x02j" +
		"k\x070\x02\x02kl\x05\x17\f\x02l\x10\x03\x02\x02\x02mn\x07%\x02\x02no\x07" +
		"$\x02\x02op\x03\x02\x02\x02pq\x05\x1F\x10\x02qr\x07$\x02\x02r\x12\x03" +
		"\x02\x02\x02sw\x07$\x02\x02tv\x05\x1F\x10\x02ut\x03\x02\x02\x02vy\x03" +
		"\x02\x02\x02wu\x03\x02\x02\x02wx\x03\x02\x02\x02xz\x03\x02\x02\x02yw\x03" +
		"\x02\x02\x02z{\x07$\x02\x02{\x14\x03\x02\x02\x02|}\t\x03\x02\x02}\x16" +
		"\x03\x02\x02\x02~\x80\x05\x15\v\x02\x7F~\x03\x02\x02\x02\x80\x81\x03\x02" +
		"\x02\x02\x81\x7F\x03\x02\x02\x02\x81\x82\x03\x02\x02\x02\x82\x18\x03\x02" +
		"\x02\x02\x83\x84\t\x04\x02\x02\x84\x1A\x03\x02\x02\x02\x85\x86\x07^\x02" +
		"\x02\x86\x87\t\x05\x02\x02\x87\x1C\x03\x02\x02\x02\x88\x89\n\x06\x02\x02" +
		"\x89\x1E\x03\x02\x02\x02\x8A\x8D\x05\x1B\x0E\x02\x8B\x8D\x05\x1D\x0F\x02" +
		"\x8C\x8A\x03\x02\x02\x02\x8C\x8B\x03\x02\x02\x02\x8D \x03\x02\x02\x02" +
		"\x8E\x8F\x07*\x02\x02\x8F\"\x03\x02\x02\x02\x90\x91\x07+\x02\x02\x91$" +
		"\x03\x02\x02\x02\x92\x93\x07t\x02\x02\x93\x94\x07g\x02\x02\x94\x95\x07" +
		"e\x02\x02\x95&\x03\x02\x02\x02\x96\x97\x07c\x02\x02\x97\x98\x07p\x02\x02" +
		"\x98\x99\x07f\x02\x02\x99(\x03\x02\x02\x02\x9A\x9B\x07=\x02\x02\x9B*\x03" +
		"\x02\x02\x02\x9C\x9D\x071\x02\x02\x9D,\x03\x02\x02\x02\x9E\x9F\x07f\x02" +
		"\x02\x9F\xA0\x07k\x02\x02\xA0\xA1\x07x\x02\x02\xA1.\x03\x02\x02\x02\xA2" +
		"\xA3\x07o\x02\x02\xA3\xA4\x07q\x02\x02\xA4\xA5\x07f\x02\x02\xA50\x03\x02" +
		"\x02\x02\xA6\xA7\x07,\x02\x02\xA72\x03\x02\x02\x02\xA8\xA9\x07-\x02\x02" +
		"\xA94\x03\x02\x02\x02\xAA\xAB\x07/\x02\x02\xAB6\x03\x02\x02\x02\xAC\xAD" +
		"\x07`\x02\x02\xAD8\x03\x02\x02\x02\xAE\xAF\x07<\x02\x02\xAF\xB0\x07<\x02" +
		"\x02\xB0:\x03\x02\x02\x02\xB1\xB2\x07B\x02\x02\xB2<\x03\x02\x02\x02\xB3" +
		"\xB4\x07?\x02\x02\xB4>\x03\x02\x02\x02\xB5\xB6\x07>\x02\x02\xB6\xB7\x07" +
		"@\x02\x02\xB7@\x03\x02\x02\x02\xB8\xB9\x07>\x02\x02\xB9B\x03\x02\x02\x02" +
		"\xBA\xBB\x07@\x02\x02\xBBD\x03\x02\x02\x02\xBC\xBD\x07>\x02\x02\xBD\xBE" +
		"\x07?\x02\x02\xBEF\x03\x02\x02\x02\xBF\xC0\x07@\x02\x02\xC0\xC1\x07?\x02" +
		"\x02\xC1H\x03\x02\x02\x02\xC2\xC8\x05\x19\r\x02\xC3\xC7\x05\x19\r\x02" +
		"\xC4\xC7\x05\x15\v\x02\xC5\xC7\t\x07\x02\x02\xC6\xC3\x03\x02\x02\x02\xC6" +
		"\xC4\x03\x02\x02\x02\xC6\xC5\x03\x02\x02\x02\xC7\xCA\x03\x02\x02\x02\xC8" +
		"\xC6\x03\x02\x02\x02\xC8\xC9\x03\x02\x02\x02\xC9\xD1\x03\x02\x02\x02\xCA" +
		"\xC8\x03\x02\x02\x02\xCB\xCD\t\b\x02\x02\xCC\xCB\x03\x02\x02\x02\xCD\xCE" +
		"\x03\x02\x02\x02\xCE\xCC\x03\x02\x02\x02\xCE\xCF\x03\x02\x02\x02\xCF\xD1" +
		"\x03\x02\x02\x02\xD0\xC2\x03\x02\x02\x02\xD0\xCC\x03\x02\x02\x02\xD1J" +
		"\x03\x02\x02\x02\r\x02]bgw\x81\x8C\xC6\xC8\xCE\xD0\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SmlLexer.__ATN) {
			SmlLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SmlLexer._serializedATN));
		}

		return SmlLexer.__ATN;
	}

}


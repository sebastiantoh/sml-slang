// Generated from src/lang/Sml.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class SmlLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly WHITESPACE = 11;
	public static readonly INT = 12;
	public static readonly FLOAT = 13;
	public static readonly CHAR = 14;
	public static readonly STRING = 15;
	public static readonly TRUE = 16;
	public static readonly FALSE = 17;
	public static readonly LPAREN = 18;
	public static readonly RPAREN = 19;
	public static readonly REC = 20;
	public static readonly AND = 21;
	public static readonly SEMICOLON = 22;
	public static readonly SLASH = 23;
	public static readonly DIV = 24;
	public static readonly MOD = 25;
	public static readonly STAR = 26;
	public static readonly PLUS = 27;
	public static readonly MINUS = 28;
	public static readonly CARET = 29;
	public static readonly CONS = 30;
	public static readonly AT = 31;
	public static readonly EQ = 32;
	public static readonly NEQ = 33;
	public static readonly LT = 34;
	public static readonly GT = 35;
	public static readonly LTE = 36;
	public static readonly GTE = 37;
	public static readonly ANDALSO = 38;
	public static readonly ORELSE = 39;
	public static readonly ID = 40;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "WHITESPACE", "INT", "FLOAT", "CHAR", "STRING", "DIGIT", "NUM", 
		"LETTER", "ESC", "SAFECODEPOINT", "ASCII", "TRUE", "FALSE", "LPAREN", 
		"RPAREN", "REC", "AND", "SEMICOLON", "SLASH", "DIV", "MOD", "STAR", "PLUS", 
		"MINUS", "CARET", "CONS", "AT", "EQ", "NEQ", "LT", "GT", "LTE", "GTE", 
		"ANDALSO", "ORELSE", "ID",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'let'", "'in'", "'end'", "'if'", "'then'", "'else'", "'fn'", 
		"'=>'", "'|'", "'val'", undefined, undefined, undefined, undefined, undefined, 
		"'true'", "'false'", "'('", "')'", "'rec'", "'and'", "';'", "'/'", "'div'", 
		"'mod'", "'*'", "'+'", "'-'", "'^'", "'::'", "'@'", "'='", "'<>'", "'<'", 
		"'>'", "'<='", "'>='", "'andalso'", "'orelse'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "WHITESPACE", "INT", "FLOAT", 
		"CHAR", "STRING", "TRUE", "FALSE", "LPAREN", "RPAREN", "REC", "AND", "SEMICOLON", 
		"SLASH", "DIV", "MOD", "STAR", "PLUS", "MINUS", "CARET", "CONS", "AT", 
		"EQ", "NEQ", "LT", "GT", "LTE", "GTE", "ANDALSO", "ORELSE", "ID",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SmlLexer._LITERAL_NAMES, SmlLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return SmlLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(SmlLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Sml.g4"; }

	// @Override
	public get ruleNames(): string[] { return SmlLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return SmlLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return SmlLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return SmlLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02*\u0115\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03\v\x03" +
		"\v\x03\v\x03\v\x03\f\x06\f\x85\n\f\r\f\x0E\f\x86\x03\f\x03\f\x03\r\x05" +
		"\r\x8C\n\r\x03\r\x03\r\x03\x0E\x05\x0E\x91\n\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10" +
		"\x07\x10\x9F\n\x10\f\x10\x0E\x10\xA2\v\x10\x03\x10\x03\x10\x03\x11\x03" +
		"\x11\x03\x12\x06\x12\xA9\n\x12\r\x12\x0E\x12\xAA\x03\x13\x03\x13\x03\x14" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x05\x16\xB6\n\x16\x03" +
		"\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03" +
		"\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03" +
		"\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03" +
		"\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03!\x03!\x03\"\x03\"" +
		"\x03#\x03#\x03$\x03$\x03%\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03" +
		"(\x03)\x03)\x03*\x03*\x03+\x03+\x03+\x03,\x03,\x03,\x03-\x03-\x03-\x03" +
		"-\x03-\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x03.\x03.\x03.\x03/\x03/\x03" +
		"/\x03/\x07/\u010A\n/\f/\x0E/\u010D\v/\x03/\x06/\u0110\n/\r/\x0E/\u0111" +
		"\x05/\u0114\n/\x02\x02\x020\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02" +
		"\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02" +
		"\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x02#\x02\x02%" +
		"\x02\x02\'\x02\x02)\x02\x02+\x02\x02-\x02\x12/\x02\x131\x02\x143\x02\x15" +
		"5\x02\x167\x02\x179\x02\x18;\x02\x19=\x02\x1A?\x02\x1BA\x02\x1CC\x02\x1D" +
		"E\x02\x1EG\x02\x1FI\x02 K\x02!M\x02\"O\x02#Q\x02$S\x02%U\x02&W\x02\'Y" +
		"\x02([\x02)]\x02*\x03\x02\t\x05\x02\v\f\x0F\x0F\"\"\x03\x022;\x04\x02" +
		"C\\c|\n\x02$$11^^ddhhppttvv\x05\x02\x02!$$^^\x04\x02))aa\x0E\x02##%(," +
		"-//11<<>B^^``bb~~\x80\x80\x02\u0119\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
		"\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
		"\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02" +
		"\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02" +
		"\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02" +
		"\x02\x02\x02\x1F\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02" +
		"\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x02" +
		"7\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02" +
		"\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02" +
		"\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03" +
		"\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02" +
		"\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02" +
		"Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x03_\x03\x02" +
		"\x02\x02\x05c\x03\x02\x02\x02\x07f\x03\x02\x02\x02\tj\x03\x02\x02\x02" +
		"\vm\x03\x02\x02\x02\rr\x03\x02\x02\x02\x0Fw\x03\x02\x02\x02\x11z\x03\x02" +
		"\x02\x02\x13}\x03\x02\x02\x02\x15\x7F\x03\x02\x02\x02\x17\x84\x03\x02" +
		"\x02\x02\x19\x8B\x03\x02\x02\x02\x1B\x90\x03\x02\x02\x02\x1D\x96\x03\x02" +
		"\x02\x02\x1F\x9C\x03\x02\x02\x02!\xA5\x03\x02\x02\x02#\xA8\x03\x02\x02" +
		"\x02%\xAC\x03\x02\x02\x02\'\xAE\x03\x02\x02\x02)\xB1\x03\x02\x02\x02+" +
		"\xB5\x03\x02\x02\x02-\xB7\x03\x02\x02\x02/\xBC\x03\x02\x02\x021\xC2\x03" +
		"\x02\x02\x023\xC4\x03\x02\x02\x025\xC6\x03\x02\x02\x027\xCA\x03\x02\x02" +
		"\x029\xCE\x03\x02\x02\x02;\xD0\x03\x02\x02\x02=\xD2\x03\x02\x02\x02?\xD6" +
		"\x03\x02\x02\x02A\xDA\x03\x02\x02\x02C\xDC\x03\x02\x02\x02E\xDE\x03\x02" +
		"\x02\x02G\xE0\x03\x02\x02\x02I\xE2\x03\x02\x02\x02K\xE5\x03\x02\x02\x02" +
		"M\xE7\x03\x02\x02\x02O\xE9\x03\x02\x02\x02Q\xEC\x03\x02\x02\x02S\xEE\x03" +
		"\x02\x02\x02U\xF0\x03\x02\x02\x02W\xF3\x03\x02\x02\x02Y\xF6\x03\x02\x02" +
		"\x02[\xFE\x03\x02\x02\x02]\u0113\x03\x02\x02\x02_`\x07n\x02\x02`a\x07" +
		"g\x02\x02ab\x07v\x02\x02b\x04\x03\x02\x02\x02cd\x07k\x02\x02de\x07p\x02" +
		"\x02e\x06\x03\x02\x02\x02fg\x07g\x02\x02gh\x07p\x02\x02hi\x07f\x02\x02" +
		"i\b\x03\x02\x02\x02jk\x07k\x02\x02kl\x07h\x02\x02l\n\x03\x02\x02\x02m" +
		"n\x07v\x02\x02no\x07j\x02\x02op\x07g\x02\x02pq\x07p\x02\x02q\f\x03\x02" +
		"\x02\x02rs\x07g\x02\x02st\x07n\x02\x02tu\x07u\x02\x02uv\x07g\x02\x02v" +
		"\x0E\x03\x02\x02\x02wx\x07h\x02\x02xy\x07p\x02\x02y\x10\x03\x02\x02\x02" +
		"z{\x07?\x02\x02{|\x07@\x02\x02|\x12\x03\x02\x02\x02}~\x07~\x02\x02~\x14" +
		"\x03\x02\x02\x02\x7F\x80\x07x\x02\x02\x80\x81\x07c\x02\x02\x81\x82\x07" +
		"n\x02\x02\x82\x16\x03\x02\x02\x02\x83\x85\t\x02\x02\x02\x84\x83\x03\x02" +
		"\x02\x02\x85\x86\x03\x02\x02\x02\x86\x84\x03\x02\x02\x02\x86\x87\x03\x02" +
		"\x02\x02\x87\x88\x03\x02\x02\x02\x88\x89\b\f\x02\x02\x89\x18\x03\x02\x02" +
		"\x02\x8A\x8C\x07\x80\x02\x02\x8B\x8A\x03\x02\x02\x02\x8B\x8C\x03\x02\x02" +
		"\x02\x8C\x8D\x03\x02\x02\x02\x8D\x8E\x05#\x12\x02\x8E\x1A\x03\x02\x02" +
		"\x02\x8F\x91\x07\x80\x02\x02\x90\x8F\x03\x02\x02\x02\x90\x91\x03\x02\x02" +
		"\x02\x91\x92\x03\x02\x02\x02\x92\x93\x05#\x12\x02\x93\x94\x070\x02\x02" +
		"\x94\x95\x05#\x12\x02\x95\x1C\x03\x02\x02\x02\x96\x97\x07%\x02\x02\x97" +
		"\x98\x07$\x02\x02\x98\x99\x03\x02\x02\x02\x99\x9A\x05+\x16\x02\x9A\x9B" +
		"\x07$\x02\x02\x9B\x1E\x03\x02\x02\x02\x9C\xA0\x07$\x02\x02\x9D\x9F\x05" +
		"+\x16\x02\x9E\x9D\x03\x02\x02\x02\x9F\xA2\x03\x02\x02\x02\xA0\x9E\x03" +
		"\x02\x02\x02\xA0\xA1\x03\x02\x02\x02\xA1\xA3\x03\x02\x02\x02\xA2\xA0\x03" +
		"\x02\x02\x02\xA3\xA4\x07$\x02\x02\xA4 \x03\x02\x02\x02\xA5\xA6\t\x03\x02" +
		"\x02\xA6\"\x03\x02\x02\x02\xA7\xA9\x05!\x11\x02\xA8\xA7\x03\x02\x02\x02" +
		"\xA9\xAA\x03\x02\x02\x02\xAA\xA8\x03\x02\x02\x02\xAA\xAB\x03\x02\x02\x02" +
		"\xAB$\x03\x02\x02\x02\xAC\xAD\t\x04\x02\x02\xAD&\x03\x02\x02\x02\xAE\xAF" +
		"\x07^\x02\x02\xAF\xB0\t\x05\x02\x02\xB0(\x03\x02\x02\x02\xB1\xB2\n\x06" +
		"\x02\x02\xB2*\x03\x02\x02\x02\xB3\xB6\x05\'\x14\x02\xB4\xB6\x05)\x15\x02" +
		"\xB5\xB3\x03\x02\x02\x02\xB5\xB4\x03\x02\x02\x02\xB6,\x03\x02\x02\x02" +
		"\xB7\xB8\x07v\x02\x02\xB8\xB9\x07t\x02\x02\xB9\xBA\x07w\x02\x02\xBA\xBB" +
		"\x07g\x02\x02\xBB.\x03\x02\x02\x02\xBC\xBD\x07h\x02\x02\xBD\xBE\x07c\x02" +
		"\x02\xBE\xBF\x07n\x02\x02\xBF\xC0\x07u\x02\x02\xC0\xC1\x07g\x02\x02\xC1" +
		"0\x03\x02\x02\x02\xC2\xC3\x07*\x02\x02\xC32\x03\x02\x02\x02\xC4\xC5\x07" +
		"+\x02\x02\xC54\x03\x02\x02\x02\xC6\xC7\x07t\x02\x02\xC7\xC8\x07g\x02\x02" +
		"\xC8\xC9\x07e\x02\x02\xC96\x03\x02\x02\x02\xCA\xCB\x07c\x02\x02\xCB\xCC" +
		"\x07p\x02\x02\xCC\xCD\x07f\x02\x02\xCD8\x03\x02\x02\x02\xCE\xCF\x07=\x02" +
		"\x02\xCF:\x03\x02\x02\x02\xD0\xD1\x071\x02\x02\xD1<\x03\x02\x02\x02\xD2" +
		"\xD3\x07f\x02\x02\xD3\xD4\x07k\x02\x02\xD4\xD5\x07x\x02\x02\xD5>\x03\x02" +
		"\x02\x02\xD6\xD7\x07o\x02\x02\xD7\xD8\x07q\x02\x02\xD8\xD9\x07f\x02\x02" +
		"\xD9@\x03\x02\x02\x02\xDA\xDB\x07,\x02\x02\xDBB\x03\x02\x02\x02\xDC\xDD" +
		"\x07-\x02\x02\xDDD\x03\x02\x02\x02\xDE\xDF\x07/\x02\x02\xDFF\x03\x02\x02" +
		"\x02\xE0\xE1\x07`\x02\x02\xE1H\x03\x02\x02\x02\xE2\xE3\x07<\x02\x02\xE3" +
		"\xE4\x07<\x02\x02\xE4J\x03\x02\x02\x02\xE5\xE6\x07B\x02\x02\xE6L\x03\x02" +
		"\x02\x02\xE7\xE8\x07?\x02\x02\xE8N\x03\x02\x02\x02\xE9\xEA\x07>\x02\x02" +
		"\xEA\xEB\x07@\x02\x02\xEBP\x03\x02\x02\x02\xEC\xED\x07>\x02\x02\xEDR\x03" +
		"\x02\x02\x02\xEE\xEF\x07@\x02\x02\xEFT\x03\x02\x02\x02\xF0\xF1\x07>\x02" +
		"\x02\xF1\xF2\x07?\x02\x02\xF2V\x03\x02\x02\x02\xF3\xF4\x07@\x02\x02\xF4" +
		"\xF5\x07?\x02\x02\xF5X\x03\x02\x02\x02\xF6\xF7\x07c\x02\x02\xF7\xF8\x07" +
		"p\x02\x02\xF8\xF9\x07f\x02\x02\xF9\xFA\x07c\x02\x02\xFA\xFB\x07n\x02\x02" +
		"\xFB\xFC\x07u\x02\x02\xFC\xFD\x07q\x02\x02\xFDZ\x03\x02\x02\x02\xFE\xFF" +
		"\x07q\x02\x02\xFF\u0100\x07t\x02\x02\u0100\u0101\x07g\x02\x02\u0101\u0102" +
		"\x07n\x02\x02\u0102\u0103\x07u\x02\x02\u0103\u0104\x07g\x02\x02\u0104" +
		"\\\x03\x02\x02\x02\u0105\u010B\x05%\x13\x02\u0106\u010A\x05%\x13\x02\u0107" +
		"\u010A\x05!\x11\x02\u0108\u010A\t\x07\x02\x02\u0109\u0106\x03\x02\x02" +
		"\x02\u0109\u0107\x03\x02\x02\x02\u0109\u0108\x03\x02\x02\x02\u010A\u010D" +
		"\x03\x02\x02\x02\u010B\u0109\x03\x02\x02\x02\u010B\u010C\x03\x02\x02\x02" +
		"\u010C\u0114\x03\x02\x02\x02\u010D\u010B\x03\x02\x02\x02\u010E\u0110\t" +
		"\b\x02\x02\u010F\u010E\x03\x02\x02\x02\u0110\u0111\x03\x02\x02\x02\u0111" +
		"\u010F\x03\x02\x02\x02\u0111\u0112\x03\x02\x02\x02\u0112\u0114\x03\x02" +
		"\x02\x02\u0113\u0105\x03\x02\x02\x02\u0113\u010F\x03\x02\x02\x02\u0114" +
		"^\x03\x02\x02\x02\r\x02\x86\x8B\x90\xA0\xAA\xB5\u0109\u010B\u0111\u0113" +
		"\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SmlLexer.__ATN) {
			SmlLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SmlLexer._serializedATN));
		}

		return SmlLexer.__ATN;
	}

}


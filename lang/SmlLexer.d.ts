import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class SmlLexer extends Lexer {
    static readonly T__0 = 1;
    static readonly T__1 = 2;
    static readonly T__2 = 3;
    static readonly T__3 = 4;
    static readonly T__4 = 5;
    static readonly T__5 = 6;
    static readonly T__6 = 7;
    static readonly T__7 = 8;
    static readonly T__8 = 9;
    static readonly T__9 = 10;
    static readonly T__10 = 11;
    static readonly T__11 = 12;
    static readonly T__12 = 13;
    static readonly T__13 = 14;
    static readonly T__14 = 15;
    static readonly WHITESPACE = 16;
    static readonly COMMENT = 17;
    static readonly INT = 18;
    static readonly REAL = 19;
    static readonly CHAR = 20;
    static readonly STRING = 21;
    static readonly TRUE = 22;
    static readonly FALSE = 23;
    static readonly LPAREN = 24;
    static readonly RPAREN = 25;
    static readonly LSQUARE = 26;
    static readonly RSQUARE = 27;
    static readonly REC = 28;
    static readonly AND = 29;
    static readonly SEMICOLON = 30;
    static readonly COMMA = 31;
    static readonly UNIT = 32;
    static readonly UNDERSCORE = 33;
    static readonly SLASH = 34;
    static readonly DIV = 35;
    static readonly MOD = 36;
    static readonly STAR = 37;
    static readonly PLUS = 38;
    static readonly MINUS = 39;
    static readonly CARET = 40;
    static readonly CONS = 41;
    static readonly AT = 42;
    static readonly EQ = 43;
    static readonly NEQ = 44;
    static readonly LT = 45;
    static readonly GT = 46;
    static readonly LTE = 47;
    static readonly GTE = 48;
    static readonly ANDALSO = 49;
    static readonly ORELSE = 50;
    static readonly QUOTE = 51;
    static readonly ID = 52;
    static readonly VAR = 53;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
